//
//  main.cpp
//  test
//
//  Created by Ruoan on 2018/7/27.
//  Copyright © 2018年 Ruoan. All rights reserved.
//

#include <iostream>
using namespace std;
void perm_recursion(int list[],int k,int m);
void swap(int &a,int &b){
    int temp=b;
    b=a;
    a=temp;
}

/* 使用递归实现
 * 递归产生所有前缀是list[0:k-1]，
 * 且后缀是list[k,m]的全排列的所有排列
 * 调用算法perm(list,0,n-1)则产生list[0:n-1]的全排列
 */
void perm_recursion(int list[],int k,int m){
    if(k==m){
        for(int i=0;i<=m;i++)
            cout<<list[i]<<" ";
        cout<<endl;
    }
    else{
        for(int i=k;i<=m;i++){
            swap(list[i],list[k]);
            perm_recursion(list,k+1,m);
            swap(list[i],list[k]);
        }
    }
}
int main(){
    int list[] = {0,1,2};
    cout << "permutation implement by recursion: " << endl;
    perm_recursion(list,0,2);
    return 0;
}
